# microservice specific routes

->         /                                                 app.identification.Routes
->         /                                                 app.locationOfGoods.Routes
->         /                                                 app.incident.Routes

GET        /                                                 controllers.RedirectController.onPageLoad()

GET        /assets/*file                                     controllers.Assets.versioned(path="/public", file: Asset)

GET        /keep-alive                                       controllers.KeepAliveController.keepAlive(mrn: Option[String] = None)
GET        /:mrn/keep-alive                                  controllers.KeepAliveController.keepAlive(mrn: Option[String])

GET        /this-service-has-been-reset                      controllers.SessionExpiredController.onPageLoad()
POST       /this-service-has-been-reset                      controllers.SessionExpiredController.onSubmit()

GET        /bad-request                                      controllers.ErrorController.badRequest()
GET        /not-found                                        controllers.ErrorController.notFound()
GET        /technical-difficulties                           controllers.ErrorController.technicalDifficulties()
GET        /internal-server-error                            controllers.ErrorController.internalServerError()

GET        /:mrn/check-answers                               controllers.CheckArrivalsAnswersController.onPageLoad(mrn: MovementReferenceNumber)
POST       /:mrn/check-answers                               controllers.CheckArrivalsAnswersController.onSubmit(mrn: MovementReferenceNumber)

GET        /arrival-notification-not-available               controllers.DraftNoLongerAvailableController.onPageLoad()
POST       /arrival-notification-not-available               controllers.DraftNoLongerAvailableController.onSubmit()

->         /hmrc-frontend                                    hmrcfrontend.Routes

GET        /unauthorised-group-access                        controllers.UnauthorisedWithGroupAccessController.onPageLoad()
GET        /cannot-use-service-no-eori                       controllers.UnauthorisedController.onPageLoad()

GET        /cannot-open                                      controllers.LockedController.onPageLoad()
POST       /cannot-open                                      controllers.LockedController.onSubmit()

GET        /:mrn/delete-lock                                 controllers.DeleteLockController.delete(mrn: MovementReferenceNumber, continue: Option[RedirectUrl])

GET        /:mrn/arrival-sent                                controllers.DeclarationSubmittedController.onPageLoad(mrn: MovementReferenceNumber)
